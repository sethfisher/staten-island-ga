<?php // $Id$

/**
 * @file
 * Install and uninstall functions for the User Alert module.
 */

/**
 * Implementation of hook_requirements().
 *
 */

function user_alert_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
  	
  	global $cookie_domain;
  	
  	$requirements['user_alert'] = array(
      'title' => t('User Alert'),
    );
  	
  	if (!strlen($cookie_domain)) {
  		$requirements['user_alert']['severity'] = REQUIREMENT_WARNING;
  		$requirements['user_alert']['description'] = t('User Alert runs on a cookie and $cookie_domain is not set in your settings.php. Multisite setups may encounter issues.');
		$requirements['user_alert']['value'] = t('Not set.');  	
  	} else {
  		$requirements['user_alert']['severity'] = REQUIREMENT_OK;
  		$requirements['user_alert']['value'] = t('$cookie_domain is set to @cookie_domain in settings.php.', array('@cookie_domain' => $cookie_domain));
  	}
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
 
function user_alert_schema() {
	$schema['user_alert'] = array(
    'description' => 'User Alert table.',
    'fields' => array(
	  'aid' => array(
        'description' => 'The serial ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
	  ),
      'nid' => array(
        'description' => 'The primary identifier of a user alert node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
	  ),
      'uuid' => array(
        'description' => 'The UUID of the visitor.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ),
	  ),
    'primary key' => array('aid'),
  );

return $schema;

}

function user_alert_install() {
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['user_alert']);
}

/**
 * Implements hook_uninstall().
 */
function user_alert_uninstall() {
	variable_del('user_alert_label');
	variable_del('user_alert_timelimit');
}